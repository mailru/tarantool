ch = box.ipc.channel()
---
...
ch:is_full()
---
- false
...
ch:is_empty()
---
- true
...
ch:get(.1)
---
- null
...
ch:put()
---
- error: 'usage: channel:put(var [, timeout])'
...
ch:put('test')
---
- true
...
ch:get()
---
- test
...
ch:get('wrong timeout')
---
- error: timeout must be a number
...
ch:get(-10)
---
- error: wrong timeout
...
ch:put(234)
---
- true
...
ch:put(345, .5)
---
- false
...
ch:is_full()
---
- true
...
ch:is_empty()
---
- false
...
buffer = {}
---
...
--# setopt delimiter ';'
tfbr = box.fiber.create(
    function()
        box.fiber.detach()
        while true do
            table.insert(buffer, ch:get())
        end
    end
);
---
...
box.fiber.resume(tfbr);
---
...
t = {};
---
...
for i = 1, 10 do
    table.insert(t, {i, ch:put(i, 0.1)})
end;
---
...
--# setopt delimiter ''
t
---
- - - 1
    - true
  - - 2
    - true
  - - 3
    - true
  - - 4
    - true
  - - 5
    - true
  - - 6
    - true
  - - 7
    - true
  - - 8
    - true
  - - 9
    - true
  - - 10
    - true
...
ch:has_readers()
---
- true
...
ch:has_writers()
---
- false
...
box.fiber.cancel(tfbr)
---
...
ch:has_readers()
---
- false
...
ch:has_writers()
---
- false
...
ch:put(box.info.pid)
---
- true
...
ch:is_full()
---
- true
...
ch:is_empty()
---
- false
...
ch:get(box.info.pid) == box.info.pid
---
- true
...
buffer
---
- - 234
  - 1
  - 2
  - 3
  - 4
  - 5
  - 6
  - 7
  - 8
  - 9
  - 10
...
ch:is_empty()
---
- true
...
ch:broadcast()
---
- error: 'usage: channel:broadcast(variable)'
...
ch:broadcast(123)
---
- true
...
ch:get()
---
- 123
...
ch:is_full()
---
- false
...
ch:is_empty()
---
- true
...
--# setopt delimiter ';'
tfbr = box.fiber.create(
    function()
        box.fiber.detach()
        while true do
            local v = ch:get()
            table.insert(buffer, {'tfbr', tostring(v)})
        end
    end
);
---
...
tfbr2 = box.fiber.create(
    function()
        box.fiber.detach()
        while true do
            local v = ch:get()
            table.insert(buffer, {'tfbr2', tostring(v)})
        end
    end
);
---
...
--# setopt delimiter ''
box.fiber.resume(tfbr)
---
...
box.fiber.resume(tfbr2)
---
...
buffer = {}
---
...
buffer
---
- {}
...
ch:is_full()
---
- false
...
ch:is_empty()
---
- true
...
ch:put(1)
---
- true
...
ch:put(2)
---
- true
...
ch:put(3)
---
- true
...
ch:put(4)
---
- true
...
ch:put(5)
---
- true
...
ch:broadcast('broadcast message!')
---
- 2
...
t = {}
---
...
for i = 35, 45 do table.insert(t, ch:put(i)) end
---
...
t
---
- - true
  - true
  - true
  - true
  - true
  - true
  - true
  - true
  - true
  - true
  - true
...
buffer
---
- - - tfbr
    - '1'
  - - tfbr2
    - '2'
  - - tfbr
    - '3'
  - - tfbr2
    - '4'
  - - tfbr
    - '5'
  - - tfbr2
    - broadcast message!
  - - tfbr
    - broadcast message!
  - - tfbr2
    - '35'
  - - tfbr
    - '36'
  - - tfbr2
    - '37'
  - - tfbr
    - '38'
  - - tfbr2
    - '39'
  - - tfbr
    - '40'
  - - tfbr2
    - '41'
  - - tfbr
    - '42'
  - - tfbr2
    - '43'
  - - tfbr
    - '44'
  - - tfbr2
    - '45'
...
