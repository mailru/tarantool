dofile('utils.lua')
---
...
box.insert(box.schema.SPACE_ID, 0, 0, 'tweedledum')
---
- [0, 0, 'tweedledum']
...
box.insert(box.schema.INDEX_ID, 0, 0, 'primary', 'tree', 1, 1, 0, 'num')
---
- [0, 0, 'primary', 1701147252, 1, 1, 0, 'num']
...
s0 = box.space[0]
---
...
-- integer keys
s0:insert(1, 'tuple')
---
- [1, 'tuple']
...
box.snapshot()
---
- ok
...
s0:insert(2, 'tuple 2')
---
- [2, 'tuple 2']
...
box.snapshot()
---
- ok
...
s0:insert(3, 'tuple 3')
---
- [3, 'tuple 3']
...
s0:select(0, 1)
---
- [1, 'tuple']
...
s0:select(0, 2)
---
- [2, 'tuple 2']
...
s0:select(0, 3)
---
- [3, 'tuple 3']
...
-- Cleanup
s0:delete(1)
---
- [1, 'tuple']
...
s0:delete(2)
---
- [2, 'tuple 2']
...
s0:delete(3)
---
- [3, 'tuple 3']
...
-- Test incorrect keys - supplied key field type does not match index type
-- https://bugs.launchpad.net/tarantool/+bug/1072624
s0:insert('xxxxxxx')
---
- error: 'Tuple field 0 type does not match one required by operation: expected NUM'
...
s0:insert('')
---
- error: 'Tuple field 0 type does not match one required by operation: expected NUM'
...
s0:insert('12')
---
- error: 'Tuple field 0 type does not match one required by operation: expected NUM'
...
box.insert(box.schema.SPACE_ID, 1, 0, 'tweedledee')
---
- [1, 0, 'tweedledee']
...
box.insert(box.schema.INDEX_ID, 1, 0, 'primary', 'tree', 1, 1, 0, 'str')
---
- [1, 0, 'primary', 1701147252, 1, 1, 0, 'str']
...
s1 = box.space[1]
---
...
-- string keys
s1:insert('identifier', 'tuple')
---
- ['identifier', 'tuple']
...
box.snapshot()
---
- ok
...
s1:insert('second', 'tuple 2')
---
- ['second', 'tuple 2']
...
box.snapshot()
---
- ok
...
s1:select_range(0, '100', 'second')
---
- ['second', 'tuple 2']
...
s1:select_range(0, '100', 'identifier')
---
- ['identifier', 'tuple']
- ['second', 'tuple 2']
...
s1:insert('third', 'tuple 3')
---
- ['third', 'tuple 3']
...
s1:select(0, 'identifier')
---
- ['identifier', 'tuple']
...
s1:select(0, 'second')
---
- ['second', 'tuple 2']
...
s1:select(0, 'third')
---
- ['third', 'tuple 3']
...
-- Cleanup
s1:delete('identifier')
---
- ['identifier', 'tuple']
...
s1:delete('second')
---
- ['second', 'tuple 2']
...
s1:delete('third')
---
- ['third', 'tuple 3']
...
--# setopt delimiter ';'
function crossjoin(space0, space1, limit)
    local result = {}
    for k0, v0 in space0:pairs() do
        for k1, v1 in space1:pairs() do
            if limit <= 0 then
                return result
            end
            newtuple = {v0:unpack()}
            for _, v in v1:pairs() do
                table.insert(newtuple, v)
            end
            table.insert(result, box.tuple.new(newtuple))
            limit = limit - 1
        end
    end
    return result
end;
---
...
--# setopt delimiter ''
s0:insert(1, 'tuple')
---
- [1, 'tuple']
...
s1:insert(1, 'tuple')
---
- [1, 'tuple']
...
s1:insert(2, 'tuple')
---
- [2, 'tuple']
...
crossjoin(s1, s1, 0)
---
- {}
...
crossjoin(s1, s1, 5)
---
- - [1, 'tuple', 1, 'tuple']
  - [1, 'tuple', 2, 'tuple']
  - [2, 'tuple', 1, 'tuple']
  - [2, 'tuple', 2, 'tuple']
...
crossjoin(s1, s1, 10000)
---
- - [1, 'tuple', 1, 'tuple']
  - [1, 'tuple', 2, 'tuple']
  - [2, 'tuple', 1, 'tuple']
  - [2, 'tuple', 2, 'tuple']
...
crossjoin(s1, s0, 10000)
---
- - [1, 'tuple', 1, 'tuple']
  - [2, 'tuple', 1, 'tuple']
...
s1:truncate()
---
...
-- Bug #922520 - select missing keys
s0:insert(200, 'select me!')
---
- [200, 'select me!']
...
s0:select(0, 200)
---
- [200, 'select me!']
...
s0:select(0, 199)
---
...
s0:select(0, 201)
---
...
-- Test partially specified keys in TREE indexes
s1:insert('abcd')
---
- [1684234849]
...
s1:insert('abcda')
---
- ['abcda']
...
s1:insert('abcda_')
---
- ['abcda_']
...
s1:insert('abcdb')
---
- ['abcdb']
...
s1:insert('abcdb_')
---
- ['abcdb_']
...
s1:insert('abcdb__')
---
- ['abcdb__']
...
s1:insert('abcdb___')
---
- [6872316432586334817]
...
s1:insert('abcdc')
---
- ['abcdc']
...
s1:insert('abcdc_')
---
- ['abcdc_']
...
box.sort({s1.index[0]:select_range(3, 'abcdb')})
---
- - ['abcdb']
  - ['abcdb_']
  - ['abcdb__']
...
s1:drop()
---
...
s1 = nil
---
...
--
-- tree::replace tests
--
s0:truncate()
---
...
box.insert(box.schema.INDEX_ID, 0, 1, 'i1', 'tree', 1, 1, 1, 'num')
---
- [0, 1, 12649, 1701147252, 1, 1, 1, 'num']
...
box.insert(box.schema.INDEX_ID, 0, 2, 'i2', 'tree', 0, 1, 2, 'num')
---
- [0, 2, 12905, 1701147252, 0, 1, 2, 'num']
...
box.insert(box.schema.INDEX_ID, 0, 3, 'i3', 'tree', 1, 1, 3, 'num')
---
- [0, 3, 13161, 1701147252, 1, 1, 3, 'num']
...
s0:insert(0, 0, 0, 0)
---
- [0, 0, 0, 0]
...
s0:insert(1, 1, 1, 1)
---
- [1, 1, 1, 1]
...
s0:insert(2, 2, 2, 2)
---
- [2, 2, 2, 2]
...
-- OK
s0:replace_if_exists(1, 1, 1, 1)
---
- [1, 1, 1, 1]
...
s0:replace_if_exists(1, 10, 10, 10)
---
- [1, 10, 10, 10]
...
s0:replace_if_exists(1, 1, 1, 1)
---
- [1, 1, 1, 1]
...
s0:select(0, 10)
---
...
s0:select(1, 10)
---
...
s0:select(2, 10)
---
...
s0:select(3, 10)
---
...
s0:select(0, 1)
---
- [1, 1, 1, 1]
...
s0:select(1, 1)
---
- [1, 1, 1, 1]
...
s0:select(2, 1)
---
- [1, 1, 1, 1]
...
s0:select(3, 1)
---
- [1, 1, 1, 1]
...
-- OK
s0:insert(10, 10, 10, 10)
---
- [10, 10, 10, 10]
...
s0:delete(10)
---
- [10, 10, 10, 10]
...
s0:select(0, 10)
---
...
s0:select(1, 10)
---
...
s0:select(2, 10)
---
...
s0:select(3, 10)
---
...
-- TupleFound (primary key)
s0:insert(1, 10, 10, 10)
---
- error: Duplicate key exists in unique index 0
...
s0:select(0, 10)
---
...
s0:select(1, 10)
---
...
s0:select(2, 10)
---
...
s0:select(3, 10)
---
...
s0:select(0, 1)
---
- [1, 1, 1, 1]
...
-- TupleNotFound (primary key)
s0:replace_if_exists(10, 10, 10, 10)
---
- error: Tuple doesn't exist in index 0
...
s0:select(0, 10)
---
...
s0:select(1, 10)
---
...
s0:select(2, 10)
---
...
s0:select(3, 10)
---
...
-- TupleFound (key #1)
s0:insert(10, 0, 10, 10)
---
- error: Duplicate key exists in unique index 1
...
s0:select(0, 10)
---
...
s0:select(1, 10)
---
...
s0:select(2, 10)
---
...
s0:select(3, 10)
---
...
s0:select(1, 0)
---
- [0, 0, 0, 0]
...
-- TupleFound (key #1)
s0:replace_if_exists(2, 0, 10, 10)
---
- error: Duplicate key exists in unique index 1
...
s0:select(0, 10)
---
...
s0:select(1, 10)
---
...
s0:select(2, 10)
---
...
s0:select(3, 10)
---
...
s0:select(1, 0)
---
- [0, 0, 0, 0]
...
-- TupleFound (key #3)
s0:insert(10, 10, 10, 0)
---
- error: Duplicate key exists in unique index 3
...
s0:select(0, 10)
---
...
s0:select(1, 10)
---
...
s0:select(2, 10)
---
...
s0:select(3, 10)
---
...
s0:select(3, 0)
---
- [0, 0, 0, 0]
...
-- TupleFound (key #3)
s0:replace_if_exists(2, 10, 10, 0)
---
- error: Duplicate key exists in unique index 3
...
s0:select(0, 10)
---
...
s0:select(1, 10)
---
...
s0:select(2, 10)
---
...
s0:select(3, 10)
---
...
s0:select(3, 0)
---
- [0, 0, 0, 0]
...
-- Non-Uniq test (key #2)
s0:insert(4, 4, 0, 4)
---
- [4, 4, 0, 4]
...
s0:insert(5, 5, 0, 5)
---
- [5, 5, 0, 5]
...
s0:insert(6, 6, 0, 6)
---
- [6, 6, 0, 6]
...
s0:replace_if_exists(5, 5, 0, 5)
---
- [5, 5, 0, 5]
...
box.sort({s0:select(2, 0)})
---
- - [0, 0, 0, 0]
  - [4, 4, 0, 4]
  - [5, 5, 0, 5]
  - [6, 6, 0, 6]
...
s0:delete(5)
---
- [5, 5, 0, 5]
...
box.sort({s0:select(2, 0)})
---
- - [0, 0, 0, 0]
  - [4, 4, 0, 4]
  - [6, 6, 0, 6]
...
s0:drop()
---
...
s0 = nil
---
...
